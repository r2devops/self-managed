name: "r2devops"

x-jobs-common: &jobs-common
    image: docker.io/r2devopsio/jobs:$BACKEND_IMAGE_TAG
    env_file: .env
    environment:
      - JOBS_LISTEN_ADDR=0.0.0.0
      - JOBS_LISTEN_PORT=80
      - JOBS_CORS_ORIGIN=https://$DOMAIN_NAME
      - JOBS_FRONTEND_URL=https://$DOMAIN_NAME
      - JOBS_SESSION_TTL=168h
      - JOBS_DB_HOST=postgres
      - JOBS_DB_PORT=5432
      - JOBS_DB_SSLMODE=disable
      - JOBS_DB_TIMEZONE=Europe/Paris
      - JOBS_API_DOMAIN=https://$API_URL
      - LOG_LEVEL=info
      - LOG_FORMATTER=text
      - JOBS_REDIS_HOST=redis
      - JOBS_REDIS_PORT=6379
      - JOBS_REDIS_DB=0
      - JOBS_REDIS_USER=default
      - JOBS_REDIS_SET_NAMESPACES_TTL=30s
      - GITLEAKS_PATH=/opt/gitleaks
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./.docker/ca-certificates:/usr/local/share/ca-certificates/
    networks:
      - intranet

services:

  ############
  # R2Devops #
  ############

  frontend:
    image: docker.io/r2devopsio/frontend:$FRONTEND_IMAGE_TAG
    env_file: .env
    restart: unless-stopped
    volumes:
      - ./.docker/ca-certificates:/usr/local/share/ca-certificates/
    expose:
      - "3000"
    labels:
      - "traefik.http.routers.front.rule=Host(`${FRONTEND_DOMAIN}`)"
      - "traefik.http.routers.front.entrypoints=websecure"
      - "traefik.http.routers.front.tls=true"
    networks:
      - intranet

  jobs:
    <<: *jobs-common
    expose:
      - "80"
      - "9090"
    labels:
      - "traefik.http.routers.api.rule=Host(\"$API_DOMAIN\")&&PathPrefix(\"$API_PATH\")"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls=true"

  jobs_worker:
    <<: *jobs-common
    command: ["--worker"]
    deploy:
      mode: replicated
      replicas: 30
    expose:
      - "9090"
    labels:
      - "traefik.enable=false"


  #####################
  # External services #
  #####################

  redis:
    image: redis:7.4.5
    restart: unless-stopped
    env_file:
      - .env
    command:
      - redis-server
      - --requirepass $JOBS_REDIS_PASSWORD
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a \"$$JOBS_REDIS_PASSWORD\" ping"]
      interval: 5s
      timeout: 3s
      retries: 20
      start_period: 5s
    expose:
      - "6379"
    networks:
      - intranet

  postgres:
    image: postgres:13.21
    restart: unless-stopped
    environment:
      - POSTGRES_USER=$JOBS_DB_USER
      - POSTGRES_PASSWORD=$JOBS_DB_PASSWORD
      - POSTGRES_DB=$JOBS_DB_NAME
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB -h 127.0.0.1 -p 5432"]
      interval: 5s
      timeout: 3s
      retries: 20
      start_period: 10s
    expose:
      - "5432"
    networks:
      - intranet
    volumes:
      - postgres-data:/var/lib/postgresql/data

  #################
  # Reverse proxy #
  #################

  traefik:
    image: traefik:3.4.1
    restart: unless-stopped
    depends_on:
      - frontend
      - jobs
    ports:
      - "80:80"
      - "443:443"
    command:
      - --log.level=DEBUG
      - --accesslog=true
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.web.http.redirections.entrypoint.permanent=true
      - --entrypoints.websecure.address=:443
      - --providers.docker=true
      - --providers.file.filename=/etc/traefik/certs.yml
    labels:
      - "traefik.enable=false"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.service=api@internal"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./.docker/traefik/certs:/certs
      - ./.docker/traefik/certs.yml:/etc/traefik/certs.yml
    networks:
      - intranet

networks:
  intranet:

volumes:
  postgres-data:
