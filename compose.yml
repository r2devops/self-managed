version: '3.9'
name: "r2devops"

x-jobs-common: &jobs-common
    image: docker.io/r2devopsio/jobs:$BACKEND_IMAGE_TAG
    env_file: .env
    environment:
      - JOBS_LISTEN_ADDR=0.0.0.0
      - JOBS_LISTEN_PORT=80
      - JOBS_CORS_ORIGIN=https://$DOMAIN_NAME
      - JOBS_DB_HOST=postgres
      - JOBS_DB_PORT=5432
      - JOBS_DB_SSLMODE=disable
      - JOBS_DB_TIMEZONE=Europe/Paris
      - JOBS_API_DOMAIN=https://$API_URL/job
      - JOBS_AGENT=R2Devops-jobs/1.0.0/go
      - JOBS_AP_FILE_MAX_SIZE=100000
      - JOBS_AP_FILE_MAX_NUMBER=250
      - JOBS_AP_FILE_CLONE_TIMEOUT=10000000000
      - SERVICE_KRATOS_URL=http://kratos:4433
      - JOBS_KRATOS_DEBUG=false
      - LOG_LEVEL=info
      - LOG_FORMATTER=text
      - S3_HOST=minio:9000
      - S3_REGION=us-east-1
      - S3_DISABLE_SSL=true
      - S3_FORCE_PATH_STYLE=true
      - JOBS_REDIS_HOST=redis
      - JOBS_REDIS_PORT=6379
      - JOBS_REDIS_DB=0
      - JOBS_REDIS_USER=default
      - JOBS_REDIS_SET_NAMESPACES=namespaces
      - JOBS_REDIS_SET_NAMESPACES_TTL=120h
      - JOBS_REDIS_LIST_TASK_TPL_SYNC=templates_sync
      - JOBS_REDIS_LIST_TASK_PROJECT_ANALYSIS=project_analysis
      - GITLEAKS_PATH="/opt/gitleaks"
      - COMPLIANT_LABELS=Lint,Test,Build,Security,Deploy
      - PROJECTS_LIMIT_KEY=$PROJECTS_LIMIT_KEY
      # Below variables are not used from 1.8.0 We keep it here for
      # compatibility reasons
      - JOBS_REDIS_SET_TPL_SYNC=templates_sync
      - JOBS_REDIS_SET_TPL_PROCESSING=templates_processing
      - JOBS_REDIS_SET_TPL_MAX_SIZE=1000
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
    networks:
      - intranet

services:
  minio:
    image: minio/minio:RELEASE.2022-11-17T23-20-09Z.fips
    restart: unless-stopped
    environment:
      - MINIO_ROOT_USER=$S3_ACCESS_KEY
      - MINIO_ROOT_PASSWORD=$S3_SECRET_KEY
      - MINIO_BUCKET=$S3_BUCKET
    expose:
      - "9000"
      - "9001"
    volumes:
      - minio-data:/export
      - minio-data_config:/root/.minio
    command: server /export
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 30s
    labels:
      - "traefik.enable=false"
    networks:
      - intranet

  createbucket:
    image: minio/mc
    environment:
      - MINIO_ROOT_USER=$S3_ACCESS_KEY
      - MINIO_ROOT_PASSWORD=$S3_SECRET_KEY
      - MINIO_BUCKET=$S3_BUCKET
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://minio:9000 $S3_ACCESS_KEY $S3_SECRET_KEY;
      /usr/bin/mc mb myminio/$S3_BUCKET;
      /usr/bin/mc anonymous set private myminio/$S3_BUCKET;
      exit 0;
      "
    labels:
      - "traefik.enable=false"
    networks:
      - intranet

  kratos-migrate:
    image: oryd/kratos:v0.8.2-alpha.1
    environment:
      - DSN=$KRATOS_DSN
    volumes:
      - type: bind
        source: ./.docker/kratos
        target: /etc/config/kratos
    command: -c /etc/config/kratos/kratos.yml migrate sql -e --yes
    restart: on-failure
    networks:
      - intranet

  kratos:
      depends_on:
        - kratos-migrate
      image: oryd/kratos:v0.8.2-alpha.1
      expose:
        - "4433"
        - "4434"
      restart: unless-stopped
      command: serve -c /etc/config/kratos/kratos.yml --watch-courier
      volumes:
        - type: bind
          source: ./.docker/kratos
          target: /etc/config/kratos
      environment:
        - DSN=$KRATOS_DSN
        - SELFSERVICE_METHODS_OIDC_CONFIG_PROVIDERS=$GITLAB_OIDC
        - SERVE_PUBLIC_BASE_URL=https://$KRATOS_URL
        - SERVE_PUBLIC_CORS_ALLOWED_ORIGINS=https://$FRONTEND_URL*
        - SELFSERVICE_DEFAULT_BROWSER_RETURN_URL=https://$FRONTEND_URL/u/signin
        - SELFSERVICE_WHITELISTED_RETURN_URLS=https://$FRONTEND_URL
        - SELFSERVICE_FLOWS_ERROR_UI_URL=https://$FRONTEND_URL
        - SELFSERVICE_FLOWS_LOGIN_UI_URL=https://$FRONTEND_URL/u/signin
        - SELFSERVICE_FLOWS_SETTINGS_UI_URL=https://$FRONTEND_URL/u/dashboard/profile
        - SELFSERVICE_FLOWS_LOGOUT_AFTER_DEFAULT_BROWSER_RETURN_URL=https://$FRONTEND_URL
        - COOKIES_DOMAIN=$DOMAIN_NAME
        - SECRETS_COOKIE=$KRATOS_SECRETS_COOKIE
        - SECRETS_CIPHER=$KRATOS_SECRETS_CIPHER
        - SECRETS_DEFAULT=$KRATOS_SECRETS_DEFAULT
        - LOG_LEVEL=info
        - LOG_FORMAT=text
      labels:
        - "traefik.http.routers.kratos.rule=Host(\"$KRATOS_URL_WITHOUT_PATH\")&&PathPrefix(\"$KRATOS_PATH\")"
        - "traefik.http.routers.kratos.middlewares=kratos-stripprefix"
        - "traefik.http.middlewares.kratos-stripprefix.stripprefix.prefixes=$KRATOS_PATH"
        - "traefik.http.routers.kratos.entrypoints=websecure"
        - "traefik.http.routers.kratos.tls=true"
        - "traefik.http.routers.kratos.tls.certresolver=le"
      networks:
        - intranet

  postgres_kratos:
    image: postgres:13
    restart: unless-stopped
    expose:
      - "5432"
    env_file:
      - .env
    environment:
      - POSTGRES_USER=$KRATOS_DB_USER
      - POSTGRES_PASSWORD=$KRATOS_DB_PASSWORD
      - POSTGRES_DB=$KRATOS_DB_NAME
    networks:
      - intranet
    volumes:
      - postgres_kratos-data:/var/lib/postgresql/data

  jobs:
    <<: *jobs-common
    command: ["/bin/sh", "-c", "sleep 10 && ./app"]
    expose:
      - "80"
    labels:
      - "traefik.http.routers.api.rule=Host(\"$API_URL\")"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.tls.certresolver=le"

  jobs_worker:
    <<: *jobs-common
    command: ["/bin/sh", "-c", "sleep 15 && ./app --worker"]
    deploy:
      mode: replicated
      replicas: 5
    labels:
      - "traefik.enable=false"

  redis:
    image: redis:6
    restart: unless-stopped
    env_file:
      - .env
    command:
      - redis-server
      - --requirepass $JOBS_REDIS_PASSWORD
    expose:
      - "6379"
    networks:
      - intranet

  postgres:
    image: postgres:13
    restart: unless-stopped
    environment:
      - POSTGRES_USER=$JOBS_DB_USER
      - POSTGRES_PASSWORD=$JOBS_DB_PASSWORD
      - POSTGRES_DB=$JOBS_DB_NAME
    expose:
      - "5432"
    networks:
      - intranet
    volumes:
      - postgres-data:/var/lib/postgresql/data

  mailhog:
    image: mailhog/mailhog:latest
    expose:
      - 1025
      - 8025
    networks:
      - intranet

  traefik:
    image: traefik:v2.9
    restart: unless-stopped
    depends_on:
      - frontend
      - jobs
      - kratos
    ports:
      - "80:80"
      - "443:443"
    command:
      - --log.level=DEBUG
      - --accesslog=true
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.web.http.redirections.entrypoint.permanent=true
      - --entrypoints.websecure.address=:443
      - --providers.docker=true
      - --certificatesresolvers.le.acme.caserver=https://acme-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.le.acme.email=$CERTIFICATE_EMAIL
      - --certificatesresolvers.le.acme.storage=/acme/acme.json
      - --certificatesresolvers.le.acme.tlschallenge=true
    labels:
      - "traefik.enable=false"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=le"
      - "traefik.http.routers.traefik.service=api@internal"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik-acme:/acme
    networks:
      - intranet

  frontend:
    image: docker.io/r2devopsio/frontend:$FRONTEND_IMAGE_TAG
    restart: unless-stopped
    volumes:
      - type: bind
        source: ./.docker/r2devops/config.json
        target: /app/.next/server/app/api/config.body
    expose:
      - "3000"
    labels:
      - "traefik.http.routers.front.rule=Host(`${FRONTEND_URL}`)"
      - "traefik.http.routers.front.entrypoints=websecure"
      - "traefik.http.routers.front.tls=true"
      - "traefik.http.routers.front.tls.certresolver=le"
    networks:
      - intranet

networks:
  intranet:

volumes:
  minio-data:
  postgres-data:
  postgres_kratos-data:
  minio-data_config:
  traefik-acme:
